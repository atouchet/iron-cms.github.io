var searchIndex = {};
searchIndex["iron_cms"] = {"doc":"# Iron CMS\nCMS based on Iron Framework for **Rust**.","items":[[5,"routes","iron_cms","Routes aggregator.\nIt accumulate all posible routes for CMS.\n## How to use\n```\nextern crate iron;\nextern crate iron_cms;\nuse iron::{Iron, Chain};\nfn main() {\n   // Add routers\n   let mut chain = Chain::new(iron_cms::routes());\n   // Add Template renderer and views path\n   let paths = vec![&quot;./views/&quot;];\n   chain.link_after(iron_cms::middleware::template_render(paths));\n   // Add error-404 handler\n   chain.link_after(iron_cms::middleware::Error404);\n   // Start applocation and other actions\n   // Iron::new(chain).http(&quot;localhost:3000&quot;).unwrap();\n}\n```",null,{"inputs":[],"output":{"name":"mount"}}],[0,"middleware","","Base middleware for CMS",null,null],[0,"json","iron_cms::middleware","JSON parsing and serialization",null,null],[4,"Json","iron_cms::middleware::json","Represents a json value",null,null],[13,"I64","","",0,null],[13,"U64","","",0,null],[13,"F64","","",0,null],[13,"String","","",0,null],[13,"Boolean","","",0,null],[13,"Array","","",0,null],[13,"Object","","",0,null],[13,"Null","","",0,null],[6,"Array","","",null,null],[6,"Object","","",null,null],[3,"PrettyJson","","",null,null],[3,"AsJson","","",null,null],[3,"AsPrettyJson","","",null,null],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream.",null,null],[13,"InvalidSyntax","","",1,null],[13,"InvalidNumber","","",1,null],[13,"EOFWhileParsingObject","","",1,null],[13,"EOFWhileParsingArray","","",1,null],[13,"EOFWhileParsingValue","","",1,null],[13,"EOFWhileParsingString","","",1,null],[13,"KeyMustBeAString","","",1,null],[13,"ExpectedColon","","",1,null],[13,"TrailingCharacters","","",1,null],[13,"TrailingComma","","",1,null],[13,"InvalidEscape","","",1,null],[13,"InvalidUnicodeCodePoint","","",1,null],[13,"LoneLeadingSurrogateInHexEscape","","",1,null],[13,"UnexpectedEndOfHexEscape","","",1,null],[13,"UnrecognizedHex","","",1,null],[13,"NotFourDigit","","",1,null],[13,"ControlCharacterInString","","",1,null],[13,"NotUtf8","","",1,null],[4,"ParserError","","",null,null],[13,"SyntaxError","","msg, line, col",2,null],[13,"IoError","","",2,null],[6,"BuilderError","","",null,null],[4,"DecoderError","","",null,null],[13,"ParseError","","",3,null],[13,"ExpectedError","","",3,null],[13,"MissingFieldError","","",3,null],[13,"UnknownVariantError","","",3,null],[13,"ApplicationError","","",3,null],[13,"EOF","","",3,null],[4,"EncoderError","","",null,null],[13,"FmtError","","",4,null],[13,"BadHashmapKey","","",4,null],[5,"error_str","","Returns a readable error string for a given error code.",null,{"inputs":[{"name":"errorcode"}],"output":{"name":"str"}}],[5,"decode","","Shortcut function to decode a JSON `&amp;str` into an object",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`",null,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[6,"EncodeResult","","",null,null],[6,"DecodeResult","","",null,null],[3,"Encoder","","A structure for implementing serialization to JSON.",null,null],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asjson"}}],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asprettyjson"}}],[4,"JsonEvent","","The output of the streaming parser.",null,null],[13,"ObjectStart","","",5,null],[13,"ObjectEnd","","",5,null],[13,"ArrayStart","","",5,null],[13,"ArrayEnd","","",5,null],[13,"BooleanValue","","",5,null],[13,"I64Value","","",5,null],[13,"U64Value","","",5,null],[13,"F64Value","","",5,null],[13,"StringValue","","",5,null],[13,"NullValue","","",5,null],[13,"Error","","",5,null],[3,"Stack","","A Stack represents the current position of the parser in the logical\nstructure of the JSON stream.\nFor example foo.bar[3].x",null,null],[4,"StackElement","","StackElements compose a Stack.\nFor example, Key(&quot;foo&quot;), Key(&quot;bar&quot;), Index(3) and Key(&quot;x&quot;) are the\nStackElements compositing the stack that represents foo.bar[3].x",null,null],[13,"Index","","",6,null],[13,"Key","","",6,null],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming\nan iterator of char.",null,null],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure.",null,null],[3,"Decoder","","A structure to decode JSON to values in rust.",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",7,null],[4,"Json","iron_cms::middleware","Represents a json value",null,null],[13,"I64","","",0,null],[13,"U64","","",0,null],[13,"F64","","",0,null],[13,"String","","",0,null],[13,"Boolean","","",0,null],[13,"Array","","",0,null],[13,"Object","","",0,null],[13,"Null","","",0,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",7,null],[3,"Error404","","",null,null],[3,"Render","","Templфte Render strшct",null,null],[12,"data","","",8,null],[3,"Validator","","",null,null],[12,"requiered","","",9,null],[12,"empty","","",9,null],[12,"min","","",9,null],[12,"max","","",9,null],[12,"dafault","","",9,null],[3,"ValidateResult","","",null,null],[3,"ValidateResults","","",null,null],[12,"0","","",10,null],[3,"ErrorValidator","","Validator Errors",null,null],[12,"errors","","",11,null],[12,"errors_count","","",11,null],[12,"field","","",11,null],[5,"template_render","","Init Template renderer and add Tempaltes path.\nIt invoke to after middleware",null,{"inputs":[{"name":"vec"}],"output":{"name":"handlebarsengine"}}],[11,"catch","","",12,null],[11,"new","","",8,{"inputs":[{"name":"str"},{"name":"t"}],"output":{"name":"ironresult"}}],[11,"fmt","","",9,null],[11,"decode","","",9,{"inputs":[{"name":"__dt"}],"output":{"name":"result"}}],[11,"fmt","","",13,null],[11,"fmt","","",10,null],[11,"get_errors","","",10,null],[11,"get_values","","",10,null],[11,"new","","",9,{"inputs":[{"name":"basedatamap"}],"output":{"name":"validator"}}],[11,"validate","","",9,null],[11,"clone","","",11,null],[11,"fmt","","",11,null],[11,"decode","","",11,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[6,"BaseDataMap","","Alias for Basic Data struct",null,null],[6,"RenderResult","","Alias for basic Iron Response Result",null,null],[6,"ErrorsResult","","",null,null],[11,"from_reader","","Decodes a json value from an `&amp;mut io::Read`",0,{"inputs":[{"name":"read"}],"output":{"name":"result"}}],[11,"from_str","","Decodes a json value from a string",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Display`.",0,null],[11,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",0,null],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",0,null],[11,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",0,null],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",0,null],[11,"as_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",0,null],[11,"as_object_mut","","If the Json value is an Object, returns the associated mutable BTreeMap.\nReturns None otherwise.",0,null],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",0,null],[11,"as_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",0,null],[11,"as_array_mut","","If the Json value is an Array, returns the associated mutable vector.\nReturns None otherwise.",0,null],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",0,null],[11,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",0,null],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",0,null],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",0,null],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",0,null],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",0,null],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",0,null],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",0,null],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",0,null],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",0,null],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",0,null],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",0,null],[11,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",0,null],[11,"fmt","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"clone","","",0,null],[11,"eq","iron_cms::middleware::json","",1,null],[11,"clone","","",1,null],[11,"fmt","","",2,null],[11,"eq","","",2,null],[11,"fmt","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"fmt","","",4,null],[11,"clone","","",4,null],[11,"fmt","","",1,null],[11,"description","","",3,null],[11,"cause","","",3,null],[11,"fmt","","",3,null],[11,"from","","",3,{"inputs":[{"name":"parsererror"}],"output":{"name":"decodererror"}}],[11,"description","","",2,null],[11,"fmt","","",2,null],[11,"from","","",2,{"inputs":[{"name":"error"}],"output":{"name":"parsererror"}}],[11,"description","","",4,null],[11,"fmt","","",4,null],[11,"from","","",4,{"inputs":[{"name":"error"}],"output":{"name":"encodererror"}}],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable\nJSON to the specified writer",14,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"new","","Creates a new encoder whose output will be written in compact\nJSON to the specified writer",14,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",14,null],[11,"emit_nil","","",14,null],[11,"emit_usize","","",14,null],[11,"emit_u64","","",14,null],[11,"emit_u32","","",14,null],[11,"emit_u16","","",14,null],[11,"emit_u8","","",14,null],[11,"emit_isize","","",14,null],[11,"emit_i64","","",14,null],[11,"emit_i32","","",14,null],[11,"emit_i16","","",14,null],[11,"emit_i8","","",14,null],[11,"emit_bool","","",14,null],[11,"emit_f64","","",14,null],[11,"emit_f32","","",14,null],[11,"emit_char","","",14,null],[11,"emit_str","","",14,null],[11,"emit_enum","","",14,null],[11,"emit_enum_variant","","",14,null],[11,"emit_enum_variant_arg","","",14,null],[11,"emit_enum_struct_variant","","",14,null],[11,"emit_enum_struct_variant_field","","",14,null],[11,"emit_struct","","",14,null],[11,"emit_struct_field","","",14,null],[11,"emit_tuple","","",14,null],[11,"emit_tuple_arg","","",14,null],[11,"emit_tuple_struct","","",14,null],[11,"emit_tuple_struct_arg","","",14,null],[11,"emit_option","","",14,null],[11,"emit_option_none","","",14,null],[11,"emit_option_some","","",14,null],[11,"emit_seq","","",14,null],[11,"emit_seq_elt","","",14,null],[11,"emit_map","","",14,null],[11,"emit_map_elt_key","","",14,null],[11,"emit_map_elt_val","","",14,null],[11,"encode","iron_cms::middleware","",0,null],[11,"index","","",0,null],[11,"index","","",0,null],[11,"fmt","iron_cms::middleware::json","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"fmt","","",6,null],[11,"clone","","",6,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"new","","",15,{"inputs":[],"output":{"name":"stack"}}],[11,"len","","Returns The number of elements in the Stack.",15,null],[11,"is_empty","","Returns true if the stack is empty.",15,null],[11,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",15,null],[11,"is_equal_to","","Compares this stack with an array of StackElements.",15,null],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",15,null],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",15,null],[11,"top","","Returns the top-most element (if any).",15,null],[11,"next","","",16,null],[11,"new","","Creates the JSON parser.",16,{"inputs":[{"name":"t"}],"output":{"name":"parser"}}],[11,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",16,null],[11,"new","","Create a JSON Builder.",17,{"inputs":[{"name":"t"}],"output":{"name":"builder"}}],[11,"build","","",17,null],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",18,{"inputs":[{"name":"json"}],"output":{"name":"decoder"}}],[11,"read_nil","","",18,null],[11,"read_usize","","",18,null],[11,"read_u8","","",18,null],[11,"read_u16","","",18,null],[11,"read_u32","","",18,null],[11,"read_u64","","",18,null],[11,"read_isize","","",18,null],[11,"read_i8","","",18,null],[11,"read_i16","","",18,null],[11,"read_i32","","",18,null],[11,"read_i64","","",18,null],[11,"read_f32","","",18,null],[11,"read_f64","","",18,null],[11,"read_bool","","",18,null],[11,"read_char","","",18,null],[11,"read_str","","",18,null],[11,"read_enum","","",18,null],[11,"read_enum_variant","","",18,null],[11,"read_enum_variant_arg","","",18,null],[11,"read_enum_struct_variant","","",18,null],[11,"read_enum_struct_variant_field","","",18,null],[11,"read_struct","","",18,null],[11,"read_struct_field","","",18,null],[11,"read_tuple","","",18,null],[11,"read_tuple_arg","","",18,null],[11,"read_tuple_struct","","",18,null],[11,"read_tuple_struct_arg","","",18,null],[11,"read_option","","",18,null],[11,"read_seq","","",18,null],[11,"read_seq_elt","","",18,null],[11,"read_map","","",18,null],[11,"read_map_elt_key","","",18,null],[11,"read_map_elt_val","","",18,null],[11,"error","","",18,null],[11,"to_json","iron_cms::middleware","",0,null],[11,"fmt","","Encodes a json value into a string",0,null],[11,"fmt","iron_cms::middleware::json","Encodes a json value into a string",19,null],[11,"fmt","","Encodes a json value into a string",20,null],[11,"indent","","Set the indentation level for the emitted JSON",21,null],[11,"fmt","","Encodes a json value into a string",21,null],[11,"from_str","iron_cms::middleware","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}]],"paths":[[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Render"],[3,"Validator"],[3,"ValidateResults"],[3,"ErrorValidator"],[3,"Error404"],[3,"ValidateResult"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"]]};
initSearch(searchIndex);
